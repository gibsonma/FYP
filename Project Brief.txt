An Experimental Comparison of Concurrent Data Structures[TAKEN]
Suitable as BA final year project or MCS masters project
Concurrent data structures are data structures that allows concurrent access by multiple threads. Many of these data structures rely on locking to control access, whereas others use more sophisticated synchronization mechanisms that ensure that they are "lock-free" or "wait-free". A good starting reference on concurrent data structures is "The Art of Multiprocessor Programming" by Maurice Herlihy & Nir Shavit, or http://www.1024cores.net/.
The goal of this project is to build implementations of several concurrent data structures, and compare them experimentally on a variety of multi-core and SMP architectures, under various use-cases. The data structures should include various types of queue (single-producer-single-consumer, single-producer-multiple-consumer, etc.), as well as lists and tables. The student should compare locking, lock-free, and wait free implementations. There is also scope for a good student to attempt to improve on existing structures, or design entirely new data structures of their own.
This project would suit a good student who is interested in algorithm and data structure design, and parallel programming. The data structure implementations should be written in C/C++.